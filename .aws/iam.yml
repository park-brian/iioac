AWSTemplateFormatVersion: 2010-09-09
Description: Provisions a web service using AWS App Runner

Parameters:
  ServiceName:
    Type: String
    Description: The name of the service
  ServiceStack:
    Type: String
    Description: The name of the CloudFormation service stack
  EcrRepository:
    Type: String
    Description: The name of the ECR repository
  GithubRepository:
    Type: String
    Description: The name of the GitHub code repository

Resources:
  GithubOidc:
    Type: AWS::IAM::OIDCProvider
    Properties:
      Url: https://token.actions.githubusercontent.com
      ClientIdList:
        - sts.amazonaws.com
        - !Sub https://github.com/${GithubRepository}
      ThumbprintList:
        - 6938fd4d98bab03faadb97b34396831e3780aea1

  DeployPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub "${ServiceName}-deploy-policy"
      Description: !Sub "Grants access to deploy ECS services for ${ServiceName}"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ecr:BatchGetImage
              - ecr:BatchCheckLayerAvailability
              - ecr:CompleteLayerUpload
              - ecr:GetDownloadUrlForLayer
              - ecr:InitiateLayerUpload
              - ecr:PutImage
              - ecr:UploadLayerPart
            Resource: !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${EcrRepository}"
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
            Resource: "*"
          - Effect: Allow
            Action:
              - cloudformation:CreateStack
              - cloudformation:DescribeStacks
              - cloudformation:CreateChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:ExecuteChangeSet
            Resource: !Sub "arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${ServiceStack}/*"
          - Effect: Allow
            Action:
              - ec2:DescribeSubnets
              - ec2:DescribeSecurityGroups
            Resource: "*"
          - Effect: Allow
            Action:
              - ecs:CreateService
              - ecs:DescribeServices
              - ecs:UpdateService
              - ecs:DeleteService
              - ecs:ListServices
              - ecs:DescribeTaskDefinition
              - ecs:RegisterTaskDefinition
              - ecs:DeregisterTaskDefinition
              - ecs:DeleteTaskDefinition
              - ecs:ListTaskDefinitions
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:DescribeLogGroups
              - logs:DeleteLogGroup
            Resource: !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/${ServiceName}:*"
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource: !Sub "arn:aws:iam::${AWS::AccountId}:role/${ServiceName}-*"


  DeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ServiceName}-deploy-role"
      AssumeRolePolicyDocument:
        Version: '2008-10-17'
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: !Ref GithubOidc
            Condition:
              StringEquals:
                token.actions.githubusercontent.com:aud: "sts.amazonaws.com"
              StringLike:
                token.actions.githubusercontent.com:sub: !Sub repo:${GithubRepository}:*
      ManagedPolicyArns:
        - !Ref DeployPolicy

  ExecutionPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub "${ServiceName}-execution-policy"
      Description: !Sub "Grants access to execute ECS services for ${ServiceName}"
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action:
              - ecr:GetAuthorizationToken
            Resource: "*"
          - Effect: Allow
            Action:
              - ecr:BatchCheckLayerAvailability
              - ecr:GetDownloadUrlForLayer
              - ecr:BatchGetImage
            Resource: !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${EcrRepository}"
          - Effect: Allow
            Action:
              - logs:CreateLogStream
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/${ServiceName}"
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/${ServiceName}:*"
          - Effect: Allow
            Action:
              - logs:PutLogEvents
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/${ServiceName}:log-stream:*"

  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ServiceName}-execution-role"
      AssumeRolePolicyDocument:
        Version: '2008-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Ref ExecutionPolicy